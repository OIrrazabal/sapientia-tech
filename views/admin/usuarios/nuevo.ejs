<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="utf-8">
    <title><%= appName %> - Crear Usuario</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Favicon -->
    <link href="/assets/img/favicon.ico" rel="icon">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600&family=Nunito:wght@600;700;800&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="/lib/animate/animate.min.css" rel="stylesheet">
    <link href="/lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">

    <!-- Customized Bootstrap Stylesheet -->
    <link href="/css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="/css/style.css" rel="stylesheet">
</head>

<body>
    <!-- Spinner Start -->
    <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="sr-only">Cargando...</span>
        </div>
    </div>
    <!-- Spinner End -->

    <%- include('../../partials/navbar', { usuario: usuario, appName: appName }) %>

    <!-- Header Start -->
    <div class="container-fluid bg-primary py-5 mb-5 page-header">
        <div class="container py-5">
            <div class="row justify-content-center">
                <div class="col-lg-10 text-center">
                    <h1 class="display-3 text-white animated slideInDown">Crear Usuario</h1>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb justify-content-center">
                            <li class="breadcrumb-item"><a class="text-white" href="/admin/home">Inicio</a></li>
                            <li class="breadcrumb-item"><a class="text-white" href="/admin/usuarios">Usuarios</a></li>
                            <li class="breadcrumb-item text-white active" aria-current="page">Crear Usuario</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>
    <!-- Header End -->

    <!-- Form Start -->
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card shadow">
                    <div class="card-body p-5">
                        <h2 class="card-title text-center mb-4">Datos del Usuario</h2>
                        
                        <% if (error) { %>
                        <div class="alert alert-danger">
                            <%= error %>
                        </div>
                        <% } %>

                        <form action="/admin/usuarios/crear" method="POST">
                            <div class="mb-3">
                                <label for="nombre" class="form-label">Nombre completo *</label>
                                <input type="text" class="form-control" id="nombre" name="nombre" 
                                       value="<%= valores && valores.nombre ? valores.nombre : '' %>" 
                                       required 
                                       minlength="3" 
                                       maxlength="100"
                                       pattern="[A-Za-zÀ-ÿ\s]+"
                                       title="El nombre debe contener solo letras y espacios, mínimo 3 caracteres">
                                <small class="text-muted">Mínimo 3 caracteres, solo letras y espacios</small>
                            </div>

                            <div class="mb-3">
                                <label for="email" class="form-label">Correo electrónico *</label>
                                <input type="email" class="form-control" id="email" name="email" 
                                       value="<%= valores && valores.email ? valores.email : '' %>" 
                                       required 
                                       maxlength="255"
                                       pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
                                       title="Ingrese un email válido">
                            </div>

                            <div class="mb-3">
                                <label for="password" class="form-label">Contraseña *</label>
                                <input type="password" class="form-control" id="password" name="password" 
                                       required 
                                       minlength="6" 
                                       maxlength="255"
                                       title="Mínimo 6 caracteres">
                                <small class="text-muted">Mínimo 6 caracteres</small>
                            </div>

                            <div class="mb-3 form-check">
                                <input type="checkbox" class="form-check-input" id="es_admin" name="es_admin" 
                                       <%= valores && valores.es_admin ? 'checked' : '' %>>
                                <label class="form-check-label" for="es_admin">¿Es administrador?</label>
                            </div>

                            <div class="mb-3">
                                <label for="telefono" class="form-label">Teléfono</label>
                                <input type="text" class="form-control" id="telefono" name="telefono" 
                                       value="<%= valores && valores.telefono ? valores.telefono : '' %>"
                                       pattern="[0-9\-\+\s\(\)]+"
                                       maxlength="20"
                                       title="Solo números, espacios, guiones, paréntesis y signo +">
                            </div>

                            <div class="mb-3">
                                <label for="direccion" class="form-label">Dirección</label>
                                <input type="text" class="form-control" id="direccion" name="direccion" 
                                       value="<%= valores && valores.direccion ? valores.direccion : '' %>"
                                       maxlength="200">
                            </div>


                            <div class="d-grid gap-2 mt-4">
                                <button type="submit" class="btn btn-primary py-3">
                                    <i class="fas fa-user-plus me-2"></i>Crear Usuario
                                </button>
                                <a href="/admin/usuarios" class="btn btn-secondary py-3">
                                    <i class="fas fa-arrow-left me-2"></i>Cancelar
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Form End -->

    <%- include('../../partials/footer') %>

    <!-- Back to Top -->
    <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a>

    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/lib/wow/wow.min.js"></script>
    <script src="/lib/easing/easing.min.js"></script>
    <script src="/lib/waypoints/waypoints.min.js"></script>
    <script src="/lib/owlcarousel/owl.carousel.min.js"></script>

    <!-- Template Javascript -->
    <script src="/js/main.js"></script>

    <!-- Validaciones del lado cliente -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        const nombreInput = document.getElementById('nombre');
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');
        const telefonoInput = document.getElementById('telefono');

        // Validación en tiempo real del nombre
        nombreInput.addEventListener('blur', function() {
            const nombre = this.value.trim();
            
            // Limpiar errores previos
            this.classList.remove('is-invalid', 'is-valid');
            const errorMsg = this.parentNode.querySelector('.error-message');
            if (errorMsg) errorMsg.remove();
            
            if (!nombre) {
                showError(this, 'El nombre es obligatorio');
            } else if (nombre.length < 3) {
                showError(this, 'El nombre debe tener al menos 3 caracteres');
            } else if (!/^[A-Za-zÀ-ÿ\s]+$/.test(nombre)) {
                showError(this, 'El nombre solo puede contener letras y espacios');
            } else {
                this.classList.add('is-valid');
            }
        });

        // Validación en tiempo real del email
        emailInput.addEventListener('blur', function() {
            const email = this.value.trim();
            
            this.classList.remove('is-invalid', 'is-valid');
            const errorMsg = this.parentNode.querySelector('.error-message');
            if (errorMsg) errorMsg.remove();
            
            if (!email) {
                showError(this, 'El email es obligatorio');
            } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                showError(this, 'Ingrese un email válido');
            } else {
                this.classList.add('is-valid');
            }
        });

        // Validación en tiempo real de la contraseña
        passwordInput.addEventListener('blur', function() {
            const password = this.value;
            
            this.classList.remove('is-invalid', 'is-valid');
            const errorMsg = this.parentNode.querySelector('.error-message');
            if (errorMsg) errorMsg.remove();
            
            if (!password) {
                showError(this, 'La contraseña es obligatoria');
            } else if (password.length < 6) {
                showError(this, 'La contraseña debe tener al menos 6 caracteres');
            } else {
                this.classList.add('is-valid');
            }
        });

        // Validación del teléfono (opcional)
        telefonoInput.addEventListener('blur', function() {
            const telefono = this.value.trim();
            
            this.classList.remove('is-invalid', 'is-valid');
            const errorMsg = this.parentNode.querySelector('.error-message');
            if (errorMsg) errorMsg.remove();
            
            if (telefono && !/^[0-9\-\+\s\(\)]+$/.test(telefono)) {
                showError(this, 'El teléfono solo puede contener números, espacios, guiones, paréntesis y signo +');
            } else if (telefono) {
                this.classList.add('is-valid');
            }
        });

        // Validación final antes de enviar
        form.addEventListener('submit', function(e) {
            const errors = [];
            
            // Validar nombre
            const nombre = nombreInput.value.trim();
            if (!nombre) {
                errors.push('El nombre es obligatorio');
                nombreInput.classList.add('is-invalid');
            } else if (nombre.length < 3) {
                errors.push('El nombre debe tener al menos 3 caracteres');
                nombreInput.classList.add('is-invalid');
            } else if (!/^[A-Za-zÀ-ÿ\s]+$/.test(nombre)) {
                errors.push('El nombre solo puede contener letras y espacios');
                nombreInput.classList.add('is-invalid');
            }
            
            // Validar email
            const email = emailInput.value.trim();
            if (!email) {
                errors.push('El email es obligatorio');
                emailInput.classList.add('is-invalid');
            } else if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
                errors.push('El email no es válido');
                emailInput.classList.add('is-invalid');
            }
            
            // Validar contraseña
            const password = passwordInput.value;
            if (!password) {
                errors.push('La contraseña es obligatoria');
                passwordInput.classList.add('is-invalid');
            } else if (password.length < 6) {
                errors.push('La contraseña debe tener al menos 6 caracteres');
                passwordInput.classList.add('is-invalid');
            }
            
            // Validar teléfono (si tiene contenido)
            const telefono = telefonoInput.value.trim();
            if (telefono && !/^[0-9\-\+\s\(\)]+$/.test(telefono)) {
                errors.push('El teléfono tiene un formato inválido');
                telefonoInput.classList.add('is-invalid');
            }
            
            // Si hay errores, no enviar el formulario
            if (errors.length > 0) {
                e.preventDefault(); // ESTO EVITA QUE SE ENVÍE EL FORMULARIO
                alert('Por favor corrige los siguientes errores:\n\n• ' + errors.join('\n• '));
                
                // Hacer foco en el primer campo con error
                const firstError = document.querySelector('.is-invalid');
                if (firstError) firstError.focus();
            }
        });

        // Función auxiliar para mostrar errores
        function showError(field, message) {
            field.classList.add('is-invalid');
            const errorDiv = document.createElement('small');
            errorDiv.className = 'text-danger error-message';
            errorDiv.textContent = message;
            field.parentNode.appendChild(errorDiv);
        }

        // Limpiar validaciones cuando el usuario empiece a escribir
        [nombreInput, emailInput, passwordInput, telefonoInput].forEach(input => {
            input.addEventListener('input', function() {
                if (this.classList.contains('is-invalid')) {
                    this.classList.remove('is-invalid');
                    const errorMsg = this.parentNode.querySelector('.error-message');
                    if (errorMsg) errorMsg.remove();
                }
            });
        });
    });
    </script>

</body>
</html>